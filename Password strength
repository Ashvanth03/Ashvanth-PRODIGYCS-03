import re
def assess_password_strength(password):
# Criteria for assessing strength
length_criteria = len(password) >= 8
uppercase_criteria = re.search(r'[A-Z]', password) is not None
lowercase_criteria = re.search(r'[a-z]', password) is not None
number_criteria = re.search(r'\d', password) is not None
special_char_criteria = re.search(r'[!@#$%^&*(),.?":{}|<>]', password) is not None
# Evaluate password strength
score = sum([length_criteria, uppercase_criteria, lowercase_criteria, number_criteria, special_char_criteria])
# Feedback based on the criteria met
if score == 5:
strength = 'Strong'
feedback = 'Your password is very strong. It meets all the criteria.'
elif score == 4:
strength = 'Good'
feedback = 'Your password is good. It meets most of the criteria.'
elif score == 3:
strength = 'Fair'
feedback = 'Your password is fair. It meets some of the criteria.'
else:
strength = 'Weak'
feedback = 'Your password is weak. It does not meet enough criteria.'
return strength, feedback
if __name__ == "__main__":
password = input("Enter your password to assess its strength: ")
strength, feedback = assess_password_strength(password)
print(f"Password Strength: {strength}")
print(f"Feedback: {feedback}")
